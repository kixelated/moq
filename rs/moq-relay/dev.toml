[log]
# Enable debug logging for development.
# The RUST_LOG environment variable will take precedence.
level = "debug"

[server]
# Listen for QUIC connections on UDP:4443
# Sometimes IPv6 causes issues; try 127.0.0.1:4443 instead.
listen = "[::]:4443"

# Generate a self-signed certificate for the given hostnames.
# This is used for local development, in conjunction with a fingerprint, or with TLS verification disabled.
tls.generate = ["localhost"]

# In production, we would use a real certificate from something like Let's Encrypt.
# Multiple certificates are supported; the first one that matches the SNI will be used.
# [[server.tls.cert]]
# chain = "dev/quic.video.pem"
# key = "dev/quic.video.key"


# Authentication is rather crude because it's GOOD ENOUGH for now.
#
# If a root key is provided, then a moq-token must be provided in the connection URL.
# Additional keys can be configured for specific paths to scope permissions.
#
# An authenticated URL ends with the `.jwt` extension.
# The last part of the path is used as the token (minus the `.jwt` extension), encoded as base64 JSON.
# The rest of the path is used to determine the *exact* key to use for authentication.
#
# Each key is configured as a path to a JWK file.
# If an empty path is provided, then *authentication is disabled*.
#
# **WARNING**: If a connection is authorized for `/foo`, then it is also authorized for `/foo/bar`.
# That means it's always an error to disable root authentication but specify paths.
#
# == Example ==
# Let's say we have a `root.jwk` and `demo.jwk` generated by moq-token.
#
# ```sh
#   moq-token generate --key root.jwk
#   moq-token generate --key demo.jwk
# ```
#
# We first need to configure moq-relay to accept them:
#
# ```toml
#   [auth]
#   key = "root.jwk"
#
#   [[auth.path]]
#   demo = "demo.jwk"
# ```
#
# We can use [moq-token](../moq-token) or [moq-token-cli](../moq-token-cli) to sign tokens for us.
# ```sh
#   TOKEN=$(moq-token sign --key demo.jwk --subscribe "" --publish "foo/")
# ```
#
# The output is a base64 JSON token that we can append to the key's path:
#   `/demo/XXXXX.jwt`
#
# This specific token will allow subscribing to `/demo/**` and publishing to `/demo/foo/**`.
#
# - If someone tries to connect to `/demo/**` without a (valid) token, then the connection will be rejected.
# - If someone tries to connect to `/baz/**`, then the root key will be used instead.
[auth]
# just relay will generate a root key and set this value via the CLI
key = "dev/root.jwk"

# Allow any connection to these paths without a token.
path = { demo = "", anon = "", hang = "" }
