[log]
# Enable debug logging for development.
# The RUST_LOG environment variable will take precedence.
level = "debug"

[server]
# Listen for QUIC connections on UDP:4443
# Sometimes IPv6 causes issues; try 127.0.0.1:4443 instead.
listen = "[::]:4443"

# Generate a self-signed certificate for the given hostnames.
# This is used for local development, in conjunction with a fingerprint, or with TLS verification disabled.
tls.generate = ["localhost"]

# In production, we would use a real certificate from something like Let's Encrypt.
# Multiple certificates are supported; the first one that matches the SNI will be used.
# [[server.tls.cert]]
# chain = "dev/quic.video.pem"
# key = "dev/quic.video.key"


# Authentication is rather crude because it's GOOD ENOUGH for now.
#
# All authentication is performed at connection time and is based on the broadcast path.
# A client can either:
#   - connect to `/?jwt=...` using a JWT token scoped to a path within the token.
#   - connect to `/` using no token and defaulting to the configured public path, if any.
#
# The expectation is that some API server will generate a JWT token for each user.
# This is the easiest way to divest the relay from any business logic in regards to authentication.
# Both the relay and API server will need to be configured with the same root key; currently it's symmetric.
#
# Authorization is split into separate publishing and subscribing permissions.
# If you're authenticated to publish to `foo/`, then you can publish `foo/bar` or `foo/baz`.
# Likewise, if you're authenticated to subscribe to `foo/`, then you can subscribe to `foo/bar` or `foo/baz`.
#
# **Note** the slash is not special, only the string prefix is checked.
# If you're authenticated to publish to `foo`, then it's (currently) valid to publish to `foo/bar` and `foobar` (!).
# If you want to avoid this, make sure all paths end with delimiter... like a slash.
#
# ## JWT Token
# The `?jwt=` query parameter contains a base64 JSON token that is signed with the root key.
#
# The token contains permissions for the connection.
# It specifies a few things:
# - root: The publish and subscribe paths are relative to this path. Defaults to "".
# - subscribe: The connection can ONLY subscribe to broadcasts with this prefix, relative to the root. Defaults to None.
# - publish: The connection can ONLY publish to broadcasts with this prefix, relative to the root. Defaults to None.
#
# If the connection attempts to publish or subscribe to a path that is not allowed, then an Unauthorized error will be returned.
#
# A practical example:
# - root: "hang/meeting-abc/"
# - subscribe: ""
# - publish: "alice/"
#
# This user would connect to `https://relay.quic.video/?jwt=...`
# They could then publish `hang/meeting-abc/alice/camera` and subscribe to `hang/meeting-abc/bob/camera`.
# It would be an error if they tried to publish to `hang/meeting-abc/bob/camera` or subscribe to `hang/meeting-ZYX/bob/camera`.
#
# ## Public Path
# If no token is provided, then the connection will default to the public path, if any.
#
# There's currently no subscribe-only or publish-only support.
# This path is fully public and users can impersonate each other if they want.
# Use it mostly for testing.
[auth]
# `just leaf` will generate a root key and set this value via the CLI
# If you want to disable authentication, don't specify a key.
key = "dev/root.jwk"

# Allow anonymous users, transparently putting them under this prefix.
public = "anon/"
