name: deploy

on:
  release:
    types: [published]


env:
  REGISTRY: docker.io
  IMAGE: kixelated/moq-rs

jobs:
  deploy-karp:
    if: startsWith(github.event.release.tag_name, 'moq-karp-v')

    name: Publish moq-karp Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      # I'm paying for Depot for faster ARM builds.
      - uses: depot/setup-action@v1

      # Login to docker.io
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract version from the tag
      - id: version
        run: echo "version=${GITHUB_REF_NAME##moq-karp-v}" >> $GITHUB_OUTPUT

      # Build and push Docker image with Depot
      - uses: depot/build-push-action@v1
        with:
          project: r257ctfqm6
          context: .
          push: true
          target: moq-karp
          tags: ${{env.REGISTRY}}/${{env.IMAGE}}:${{ steps.version.outputs.version }}
          platforms: linux/amd64,linux/arm64

  deploy-relay:
    if: startsWith(github.event.release.tag_name, 'moq-relay-v')

    name: Publish moq-relay Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      # I'm paying for Depot for faster ARM builds.
      - uses: depot/setup-action@v1

      # Login to docker.io
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract version from the tag
      - id: version
        run: echo "version=${GITHUB_REF_NAME##moq-relay-v}" >> $GITHUB_OUTPUT

      # Build and push Docker image with Depot
      - uses: depot/build-push-action@v1
        with:
          project: r257ctfqm6
          context: .
          push: true
          target: moq-relay
          tags: ${{env.REGISTRY}}/${{env.IMAGE}}:${{ steps.version.outputs.version }}
          platforms: linux/amd64,linux/arm64
